version: '3.8'

services:
  mariadb-master:
    container_name: 3dollars-in-my-pocket-mariadb-master
    image: docker.io/bitnami/mariadb:10.4
    ports:
      - '3310:3306'
    volumes:
      - mariadb-volume:/bitnami/mariadb
    restart: unless-stopped
    environment:
      - MARIADB_REPLICATION_MODE=master
      - MARIADB_REPLICATION_USER=repl_user
      - MARIADB_USER=threedollar
      - MARIADB_DATABASE=threedollar_test
      - MARIADB_ROOT_PASSWORD=threedollar
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: [ 'CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh' ]
      interval: 15s
      timeout: 5s
      retries: 6
    networks:
      - threedollar-network

  mariadb-slave:
    container_name: 3dollars-in-my-pocket-mariadb-slave
    image: docker.io/bitnami/mariadb:10.4
    ports:
      - '3311:3306'
    depends_on:
      - mariadb-master
    restart: unless-stopped
    environment:
      - MARIADB_REPLICATION_MODE=slave
      - MARIADB_REPLICATION_USER=repl_user
      - MARIADB_USER=threedollar
      - MARIADB_DATABASE=threedollar_test
      - MARIADB_MASTER_HOST=mariadb-master
      - MARIADB_MASTER_PORT_NUMBER=3306
      - MARIADB_MASTER_ROOT_PASSWORD=threedollar
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: [ 'CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh' ]
      interval: 15s
      timeout: 5s
      retries: 6
    networks:
      - threedollar-network

  redis:
    image: redis:6.0
    container_name: 3dollars-in-my-pocket-redis
    command: redis-server --port 6379
    ports:
      - '6380:6379'
    restart: unless-stopped
    volumes:
      - redis-volume:/data
    networks:
      - threedollar-network
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 15s
      timeout: 5s
      retries: 6

  mongo1:
    image: mongo:5.0
    hostname: mongo1
    container_name: 3dollars-in-my-pocket-mongo1
    volumes:
      - mongodb1-volume:/data/db
    networks:
      - threedollar-network
    expose:
      - 27017
    ports:
      - "27018:27017"
    restart: unless-stopped
    command: mongod --replSet threedollar-replication-1
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 15s
      timeout: 5s
      retries: 6

  mongo2:
    image: mongo:5.0
    hostname: mongo2
    container_name: 3dollars-in-my-pocket-mongo2
    volumes:
      - mongodb2-volume:/data/db
    expose:
      - 27017
    ports:
      - "27019:27017"
    networks:
      - threedollar-network
    restart: unless-stopped
    command: mongod --replSet threedollar-replication-1
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 15s
      timeout: 5s
      retries: 6

  mongo3:
    image: mongo:5.0
    hostname: mongo3
    container_name: 3dollars-in-my-pocket-mongo3
    volumes:
      - mongodb3-volume:/data/db
    expose:
      - 27017
    ports:
      - "27020:27017"
    restart: unless-stopped
    command: mongod --replSet threedollar-replication-1
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 15s
      timeout: 5s
      retries: 6

  mongoinit:
    image: mongo:5.0
    container_name: 3dollars-in-my-pocket-mongoinit
    restart: "no"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: >
      sleep(15)
      mongo --host mongo1:27017 --eval 
      '
      db = (new Mongo("localhost:27017")).getDB("test");
      config = {
      "_id" : "threedollar-replication-1",
      "members" : [
        {
          "_id" : 0,
          "host" : "mongo1:27017",
        },
        {
          "_id" : 1,
          "host" : "mongo2:27017"
        },
      {
          "_id" : 2,
          "host" : "mongo3:27017"
      }
      ]
      };
      rs.initiate(config);
      '

volumes:
  mariadb-volume:
    driver: local
  mongodb1-volume:
    driver: local
  mongodb2-volume:
    driver: local
  mongodb3-volume:
    driver: local
  redis-volume:
    driver: local

networks:
  threedollar-network:
    driver: bridge
