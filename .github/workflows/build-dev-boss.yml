name: 개발환경 - 빌드 - Boss API

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Semantic Versioning ex) v0.0.1"
        required: true
        type: string

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: validate semantic versioning
        uses: actions/github-script@v3
        if: ${{ !startsWith(github.event.inputs.version, 'v') }}
        with:
          script: core.setFailed('input semantic version ex) v0.0.1')

  build:
    runs-on: ubuntu-latest
    needs:
      - validate
    environment: dev-boss
    steps:
      - name: checkout@v2
        uses: actions/checkout@v2

      - name: Version
        id: version
        run: |
          VERSION=${VERSIONING#v}-${{ github.run_id }}
          echo "::set-output name=version::$VERSION"
        env:
          VERSIONING: ${{ github.event.inputs.version }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build API
        id: build
        env:
          DOCKER_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DOCKER_REPOSITORY: 3dollar-boss-api-dev
          IMAGE_TAG: ${{ steps.version.outputs.version }}
        run: |
          docker build -t $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG -f ./threedollar-api-boss/Dockerfile .
          docker tag $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest

          echo "🐇 Build Image >> $DOCKER_REPOSITORY$IMAGE_TAG"
