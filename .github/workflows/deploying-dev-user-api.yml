name: 개발 환경 유저 API 서버 배포

on:
  push:
    branches:
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev-user
    steps:
      - name: checkout@v2
        uses: actions/checkout@v2

      - name: Version
        id: version
        run: |
          VERSION=`cat ./version.txt`-${{ github.run_id }}
          echo "::set-output name=version::$VERSION"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build API
        id: build
        env:
          DOCKER_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DOCKER_REPOSITORY: 3dollar-api-dev
          IMAGE_TAG: ${{ steps.version.outputs.version }}
        run: |
          docker build -t $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG -f ./threedollar-api-user/Dockerfile .
          docker tag $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest

          echo "::set-output name=image::$DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG"
          echo "🐇 Build Image >> $DOCKER_REPOSITORY$IMAGE_TAG"

      - name: Download task definition
        id: download-task-definition
        run: |
          aws ecs describe-task-definition --task-definition threedollar-user-api-dev --query taskDefinition > task-definition-user-dev.json
          echo "::set-output name=task-definition::$GITHUB_WORKSPACE/task-definition-user-dev.json"

      - name: Update Amazon ECS task definition
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.download-task-definition.outputs.task-definition }}
          container-name: threedollar-user-api-dev
          image: ${{ steps.build.outputs.image }}

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
          cluster: threedollar-dev
          service: threedollar-user-api-dev
          wait-for-service-stability: true
