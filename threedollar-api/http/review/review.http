### [인증] 가게에 새로운 리뷰를 등록합니다.
POST {{host_api}}/api/v2/store/review
Content-Type: application/json
Authorization: {{AUTHORIZATION}}

{
    "storeId": {{STORE_ID}},
    "contents": "맛있어요",
    "rating": 5
}

> {%
client.test("200 OK", function() {
    client.global.set("REVIEW_ID", response.body["data"]["reviewId"])
    client.assert(response.status === 200, "응답 실패");
});
%}


### [인증] 사용자가 작성한 리뷰를 수정합니다.
PUT {{host_api}}/api/v2/store/review/{{REVIEW_ID}}
Content-Type: application/json
Authorization: {{AUTHORIZATION}}

{
    "contents": "맛있어요",
    "rating": 3
}

> {%
client.test("200 OK", function() {
    client.assert(response.status === 200, "응답 실패");
});
%}


### [인증] 사용자가 작성한 리뷰를 삭제합니다.
DELETE {{host_api}}/api/v2/store/review/{{REVIEW_ID}}
Authorization: {{AUTHORIZATION}}

> {%
client.test("200 OK", function() {
    client.assert(response.status === 200, "응답 실패");
});
%}

### [인증] 사용자가 작성한 리뷰를 전체 조회합니다. (페이지네이션)
GET {{host_api}}/api/v2/store/reviews/me?size=2
Authorization: {{AUTHORIZATION}}

> {%
client.test("200 OK", function() {
    client.global.set("REVIEW_CURSOR", response.body["data"]["nextCursor"])
    client.assert(response.status === 200, "응답 실패");
});
%}


### [인증] 사용자가 작성한 리뷰를 전체 조회합니다. (페이지네이션)
GET {{host_api}}/api/v2/store/reviews/me?size=2&cursor={{REVIEW_CURSOR}}
Authorization: {{AUTHORIZATION}}

> {%
client.test("200 OK", function() {
    client.global.set("REVIEW_CURSOR", response.body["data"]["nextCursor"])
    client.assert(response.status === 200, "응답 실패");
});
%}
